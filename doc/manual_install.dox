///
/// @page manual_install Manual Installation
/// The general quick-start steps for installing <b><i>ElmerFoamFSI</i></b> are as follows:
///
/// @note The instructions presented herein require a Linux terminal. As such the commands are fairly general and are not shell specific. For these reasons instructions that require setting paths are left deliberately vague. Users should set path variables using the form dictated by their shell environment. The general forms for bash and csh are given here for ease-of-use. Note the syntax; it is <b><i>very</i></b> important! Users can determine their current shell environment by using SHELL.
/// > echo $SHELL \n
/// > /bin/bash: export USR_VAR="/path/to/user/location/" \n
/// > ../bin/csh: setenv USR_VAR /path/to/user/location
///
/// @warning 
/// * Users will need to modify one critical file <i>before</i> building <b><i>OpenFOAM</i></b>. These changes enable options that are used to build other components of the <b><i>ElmerFoamFSI</i></b> package. If users do not follow this step, <b><i>OpenFOAM</i></b> will need to be rebuilt after enabling these options.
/// * According to the <b><i>Elmer</i></b> forum, <b><i>Elmer</i></b> uses gfortran of versions 4.8 or later. Be sure to start with v-4.8+, or users will have rebuild the system from scratch. A consistent toolchain is <b><i>mandatory</i></b> to install the <b><i>ElmerFoamFSI</i></b> application!
///
/// ###1. Install <b><i>OpenFOAM</i></b> extend from [OpenFOAM-extend](http://www.extend-project.de/ "OpenFOAM Extend Project")
///    * Review the native <b><i>OpenFOAM</i></b> build instructions: <b>~/foam/foam-extend-<version>/doc/buildInstructions</b>
///    * Install system packages (optional, but recommended)
///    * Modify the <i>\%build</i> section of the spec file associated with the appropriate version of openmpi (e.g., openmpi-1.6.5.spec) (Note: likely the latest version, but ensure after building that your machine did use the spec file that you edited by checking the output from the OpenFoam build to see which openmpi package was used.)
/// > cd ~/foam/foam-extend-<version> \n
/// > cd ./ThirdParty/rpmBuild/SPECS \n
/// > ls openmpi* \n
/// > <i>open associated spec file using editor of choice (e.g., vi or emacs)</i>
///    ** In the section labeled "export WM settings in a form that GNU configure recognizes," add the "-fPIC" option flag to the <i>CC</i> and <i>CXX</i> lines:
/// > [ -n "$WM_CC" ]         &&  export CC="$WM_CC -fPIC" \n
/// > [ -n "$WM_CXX" ]        &&  export CXX="$WM_CXX -fPIC" \n
///    ** Just below this same section, add two export statements before "unset mpiWith":
/// > export FC="gfortran -fPIC" \n
/// > export F90="gfortran -fPIC" \n
/// > unset mpiWith
///    ** Slightly farther down in the <i>./configure</i> section, delete the following lines:
/// > \-\-disable-mpi-f77 \n
/// > \-\-disable-mpi-f90 \n
/// > \-\-disable-mpi-cxx
///    * Modify the appropriate shell script. The user should navigate into $ELMERFOAMTOP/foam/foam-extend-<version>/etc and open the cshrc or bashrc file depening on if using Cshell or Bash respectively. In the file every instance of "$HOME" should be replaced with "$ElmerFoamTop" (Note: either manually enter the full path to the top level ElmerFoamFSI directory for $ElmerFoamTop or set an environment variable equal to that path).
///    * Source the appropriate shell script (bash or csh)
///    * Build with (or without) <b><i>ParaView</i></b> (user choice)
///    * Review the build output to make sure that the 5 stages of <b><i>OpenFOAM</i></b> built properly
/// > cd ~/foam/foam-extend\*\n 
/// > source etc/cshrc \n
/// > ./Allwmake.firstInstall | tee build_firstInstall.out \n
/// > grep "Done" build_firstInstall.out
///
/// ###2. Set up the proper user build environment for the rest of the toolchain
///    * (Re-)source the appropriate shell script (bash or csh)
/// > source ~/foam/foam-extend-<version>/etc/cshrc
///    * Set the <i>CC</i>, <i>CXX</i>, and <i>FC</i> environment variables
/// > CC = mpicc\n
/// > CXX = mpicxx\n
/// > FC = mpif90
///    * Ensure that the correct version of compiler wrappers are being used. The system should return some <b><i>OpenFOAM</i></b> path to MPI and the system version of the compiler to which the wrapper points.
/// > which mpicc  \n
/// > mpicc \-\-version \n
/// > which mpicxx \n
/// > mpicxx \-\-version \n
/// > which mpif90 \n
/// > mpif90 \-\-version \n
///    * If users receive a system error, it is likely associated with missing modifications to the openmpi spec file.
///
/// ###3. Install <b><i>IMPACT</i></b> and <b><i>IRAD</i></b> infrastructures
/// The <b><i>IMPACT</i></b> and <b><i>IRAD</i></b> infrastructures are used as <i>support</i> libraries, and the following build scenario is recommended. Note that these support libraries should be built <i>out-of-source</i> <b>but</b> installed <i>in the same place</i>.
///    * Install <b><i>IMPACT</i></b> and include <b><i>IRAD</i></b> and HDF4 dependencies
/// > sudo yum install hdf4 hdf4-devel \n
/// > cd $ELMERFOAMTOP/IMPACT \n
/// > mkdir build \n
/// > cd build \n
/// > cmake .. -DCMAKE_INSTALL_PREFIX=$ELMERFOAMTOP/support_install \n
/// > make \n
/// > make install \n
///
/// ###4. Build the <b><i>OpenFoamFSI</i></b> module
///    * Set environment variable IRMULTIPHYSICS to install location of $ELMERFOAMTOP/support_install
///    * Check the definition of MPI_HOME that specifies the location of the desired openmpi libraries. \n
/// The system should return some path containing "$ELMERFOAMTOP/foam/foam-extend-<version>/ThirdParty/packages/..." \n
/// The path will look similar to the location of the spec file edited in Step 1.
/// > echo $MPI_HOME
///    * Create the <b><i>OpenFoamFSI</i></b> library that will be automatically copied into the library directory of the unaltered <b><i>OpenFOAM</i></b>
/// > cd $ELMERFOAMTOP/Third_Party_Modules/OpenFoamFSI/native/ \n
/// > wmake libso .
///
/// ###5. Update (patch) <b><i>Elmer</i></b> and build (build the <b><i>ElmerFSI</i></b> module)
/// > cd $ELMERFOAMTOP/elmerfem/fem/src \n
/// > cp -r $ELMERFOAMTOP/Third_Party_Modules/ElmerFSI/trunk/native ElmerModule \n
///    * Patch the <b><i>Elmer</i></b> source
/// > patch < ElmerModule/ElmerPatch
///    * Build <b><i>Elmer</i></b> and its module for interfacing with <b><i>IMPACT</b></i>
/// > cd $ELMERFOAMTOP/elmerfem \n
/// > mkdir build \n
/// > cd build \n
/// > cmake -DCMAKE_INSTALL_PREFIX=$ELMERFOAMTOP/support_install .. \n
/// > make \n
/// > make install \n
///    * Link the <b><i>Elmer</i></b> libraries to a more convenient location
/// > ln -s $ELMERFOAMTOP/suppport_install/share/elmersolver/lib/* $ELMERFOAMTOP/support_install/lib/.
///    * Set the LD library path to the location of the Elmer native libraries.
/// > LD_LIBRARY_PATH = $ELMERFOAMTOP/support_install/lib:$LD_LIBRARY_PATH \n
///
/// @warning After completing <b>Steps 1 - 5</b>, users should have the following installed components
/// > ~/foam (+ module) \n
/// > ~/elmer (+ module) \n
/// > ~/fsiSupport (IMPACT + IRAD)
/// If, for whatever reason, one or more of these directories does not exist, start over at the appropriate step! \n
/// If one or more of these directories does not appear to be correct, remove the attempted build of the associated component, and start over at the appropriate step! O_o \n
/// If everything looks good, the last step in building <b><i>ElmerFoamFSI</i></b> can be completed! ^_^
///
/// ###6. Install <b><i>ElmerFoamFSI</i></b> orchestrator (OpenFOAM-Elmer system driver for FSI problems)
///    * Build and test the <b><i>ElmerFoamFSI</i></b> driver: XX tests in approximately XX min.
/// > cd $ELMERFOAMTOP \n
/// > mkdir build \n
/// > cd build \n
/// > cmake .. -DCMAKE_PREFIX_PATH=$ELMERFOAMTOP/ElmerFoamSupport/install \n
/// > make \n
/// > make docs \n
/// > make test \n
