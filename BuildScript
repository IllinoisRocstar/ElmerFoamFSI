#!/bin/bash

isFirst=false
noTest=false
buildFoam=true
runPatch=true

for var in "$@"
do
  var="$(echo "$var" | awk '{print tolower($0)}')"
  if [ "$var" = "first" ] 
  then
    isFirst=true
  fi
  if [ "$var" = "notest" ]  
  then
    noTest=true
  fi
  if [ "$var" = "nofoam" ]  
  then
    buildFoam=false
  fi
  if [ "$var" = "nopatch" ]
  then
    runPatch=false
  fi
done


# Set our current directory, which should be the top
# level source for ElmerFoamFSI
topSourceDir=`pwd`
installDir="$topSourceDir/support_install"

echo "Build log for ElmerFoam Tool Chain" 2>&1 | tee Build.dat
 
if $isFirst && $runPatch
then
  echo "Patching OpenFoam & Elmer for the first build"  2>&1 | tee -a Build.dat
  ./BuildTools/PatchScript $topSourceDir 2>&1 | tee -a Build.dat
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in executing PatchScript" 2>&1 | tee -a Build.dat
    exit 1
  fi
fi

echo "Sourcing BashSourceScript" 2>&1 | tee -a Build.dat 

# Source the SourceScript to ensure the proper build environment
source BuildTools/BashSourceScript $topSourceDir 2>&1 | tee -a Build.dat
if [ ${PIPESTATUS[0]} -ne 0 ]
then
  echo "Error: Unable to source BashSourceScript" 2>&1 | tee -a Build.dat
  exit 1
fi

# Build OpenFoam
if $buildFoam
then
  if $isFirst
  then 
    ./BuildTools/BuildOpenFoam $topSourceDir first 2>&1 | tee -a Build.dat
  else 
    ./BuildTools/BuildOpenFoam $topSourceDir 2>&1 | tee -a Build.dat
  fi
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in building OpenFoam" 2>&1 | tee -a Build.dat
    exit 1
  fi
fi

# Build IMPACT, which will also build IRAD
if $noTest
then
  ./BuildTools/BuildIMPACT $topSourceDir notest 2>&1 | tee -a Build.dat
else
  ./BuildTools/BuildIMPACT $topSourceDir 2>&1 | tee -a Build.dat
fi
if [ ${PIPESTATUS[0]} -ne 0 ]
then
  echo "Error in building IMPACT & IRAD" 2>&1 | tee -a Build.dat
  exit 1
fi

# Build elmer and the elmer module
if $isFirst
then
  ./BuildTools/BuildElmerModule $topSourceDir first 2>&1 | tee -a Build.dat
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in building Elmer & Elmer Module" 2>&1 | tee -a Build.dat
    exit 1
  fi
else
  ./BuildTools/BuildElmerModule $topSourceDir 2>&1 | tee -a Build.dat
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in building Elmer & Elmer Module" 2>&1 | tee -a Build.dat
    exit 1
  fi
fi

# Build the elmer module driver
if ! $noTest
then
  ./BuildTools/BuildElmerModuleDriver $topSourceDir 2>&1 | tee -a Build.dat
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in building Elmer module driver & running tests" 2>&1 | tee -a Build.dat
    exit 1
  fi
fi

# Build openfoam module
./BuildTools/BuildOpenFoamModule $topSourceDir 2>&1 | tee -a Build.dat
if [ ${PIPESTATUS[0]} -ne 0 ]
then
  echo "Error in building OpenFoam module" 2>&1 | tee -a Build.dat
  exit 1
fi

# Build the openfoam module driver
if ! $noTest
then
  ./BuildTools/BuildOpenFoamModuleDriver $topSourceDir 2>&1 | tee -a Build.dat
  if [ ${PIPESTATUS[0]} -ne 0 ]
  then
    echo "Error in building OpenFoam module driver & running tests" 2>&1 | tee -a Build.dat
    exit 1
  fi
fi

# Build the ElmerFoamFSI driver
if $noTest
then
  ./BuildTools/BuildElmerFoamFSIDriver $topSourceDir noTest 2>&1 | tee -a Build.dat
else
  ./BuildTools/BuildElmerFoamFSIDriver $topSourceDir 2>&1 | tee -a Build.dat
fi
if [ ${PIPESTATUS[0]} -ne 0 ]
then
  echo "Error in building ElmerFoamFSI Driver & running tests" 2>&1 | tee -a Build.dat
  exit 1
fi
